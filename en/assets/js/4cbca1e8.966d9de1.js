"use strict";(self.webpackChunkklipper_docs=self.webpackChunkklipper_docs||[]).push([["4884"],{87460:function(e,n,s){s.r(n),s.d(n,{metadata:()=>t,contentTitle:()=>l,default:()=>d,assets:()=>c,toc:()=>a,frontMatter:()=>r});var t=JSON.parse('{"id":"ProductDoc/ExtensionBoard/BDsensor-m/kliper","title":"Installing **BDsensor-m**","description":"Connect the sensor cable to the EXP1 port on the mainboard","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/ProductDoc/ExtensionBoard/BDsensor-m/kliper.mdx","sourceDirName":"ProductDoc/ExtensionBoard/BDsensor-m","slug":"/ProductDoc/ExtensionBoard/BDsensor-m/kliper","permalink":"/fly-docs-next/en/docs/ProductDoc/ExtensionBoard/BDsensor-m/kliper","draft":false,"unlisted":false,"editUrl":"https://github.com/kluoyun/fly-docs-next/tree/master/docs/ProductDoc/ExtensionBoard/BDsensor-m/kliper.mdx","tags":[],"version":"current","lastUpdatedBy":"xishangxi","lastUpdatedAt":1735524497000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"sidebar_label":"Using Klipper"},"sidebar":"tutorialSidebar","previous":{"title":"Installation Guide","permalink":"/fly-docs-next/en/docs/ProductDoc/ExtensionBoard/BDsensor-m/line"},"next":{"title":"Using Marlin","permalink":"/fly-docs-next/en/docs/ProductDoc/ExtensionBoard/BDsensor-m/marlin"}}'),o=s("52676"),i=s("79938");let r={sidebar_position:3,sidebar_label:"Using Klipper"},l="Installing BDsensor-m",c={},a=[{value:"Connect the sensor cable to the EXP1 port on the mainboard",id:"connect-the-sensor-cable-to-the-exp1-port-on-the-mainboard",level:2},{value:"Install the patch into the Klipper firmware",id:"install-the-patch-into-the-klipper-firmware",level:2},{value:"If your printer runs Moonraker, add the following section to moonraker.conf, then you can update BDsensor with one click through the web page or KlipperScreen.",id:"if-your-printer-runs-moonraker-add-the-following-section-to-moonrakerconf-then-you-can-update-bdsensor-with-one-click-through-the-web-page-or-klipperscreen",level:2},{value:"Edit printer.cfg",id:"edit-printercfg",level:2},{value:"After installation, check by sending the following G-code commands:",id:"after-installation-check-by-sending-the-following-g-code-commands",level:2},{value:"Check Connection",id:"check-connection",level:2},{value:"Calibration",id:"calibration",level:2}];function h(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{ImageView:t}=n;return!t&&function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ImageView",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsxs)(n.h1,{id:"installing-bdsensor-m",children:["Installing ",(0,o.jsx)(n.strong,{children:"BDsensor-m"})]})}),"\n",(0,o.jsx)(n.h2,{id:"connect-the-sensor-cable-to-the-exp1-port-on-the-mainboard",children:"Connect the sensor cable to the EXP1 port on the mainboard"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"If the sensor cable is not long enough, use the extension cable from the packaging"}),"\n",(0,o.jsx)(n.li,{children:"The CKL and SDA lines of BDsensor-m can be connected to any GPIO pins on the board. You can also connect the BD sensor cable directly to the Bltouch port, for example:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"BLtouch    |    BDsensor-m\n5V       --\x3e     5V\nGND      --\x3e     GND\nS        --\x3e     CLK/SCL    (Input)\nGND      --\x3e     GND\nZmin     --\x3e     SDA    (Input/Output) \n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Some pins in the mainboard connectors might not be directly connected to the MCU's GPIOs (e.g., they might have filtering capacitors or be isolated through MOSFETs, diodes, or optocouplers, but if isolated through resistors or pull-up/pull-down resistors, they can be used). Therefore, they cannot be used with ",(0,o.jsx)(n.code,{children:"BDsensor-m"})," and the firmware will report a connection error. For example:"]}),"\n",(0,o.jsx)(n.li,{children:"Fan and heater connectors are isolated through MOSFETs,"}),"\n",(0,o.jsx)(n.li,{children:"Connectors for temperature thermistors and endstops/probes in some boards are usually connected to GND through filtering capacitors."}),"\n"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Install the BD sensor near the hotend as shown in the picture. ",(0,o.jsx)(n.a,{href:"https://www.thingiverse.com/thing:6098131",children:"STL of mount"}),", ",(0,o.jsx)(n.a,{href:"https://discord.com/channels/829828765512106054/1163237892957671424",children:"STL_mount_VzBot_Goliath short"})]}),"\n",(0,o.jsx)(t,{image:s(82273).Z,size:"100%",align:"left"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"install-the-patch-into-the-klipper-firmware",children:"Install the patch into the Klipper firmware"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Abandon any previously modified Klipper files and update Klipper"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cd\ncd ~/klipper\ngit checkout .\ngit pull\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Clone the latest code for the BD sensor"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cd && git clone https://github.com/markniu/Bed_Distance_sensor.git\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Install"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cd  ~/Bed_Distance_sensor/klipper/\n./install_BDsensor.sh\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Compile the firmware"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cd ~/klipper/\nmake menuconfig\nmake clean\nmake\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Flash the firmware to the mainboard connected to the BD sensor"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"if-your-printer-runs-moonraker-add-the-following-section-to-moonrakerconf-then-you-can-update-bdsensor-with-one-click-through-the-web-page-or-klipperscreen",children:"If your printer runs Moonraker, add the following section to moonraker.conf, then you can update BDsensor with one click through the web page or KlipperScreen."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"[update_manager BDsensor]\ntype: git_repo\nprimary_branch: new\nchannel: dev\npath: ~/Bed_Distance_sensor\norigin: https://github.com/markniu/Bed_Distance_sensor.git\ninstall_script: ./klipper/install_BDsensor.sh\nis_system_service: False\nmanaged_services: klipper\ninfo_tags:\ndesc=Bed Distance Sensor\n"})}),"\n",(0,o.jsx)(n.h2,{id:"edit-printercfg",children:"Edit printer.cfg"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Copy this section into your ",(0,o.jsx)(n.strong,{children:"printer.cfg"})," and edit ",(0,o.jsx)(n.code,{children:"sda_pin"})," and ",(0,o.jsx)(n.code,{children:"scl_pin"})," in ",(0,o.jsx)(n.code,{children:"[BDsensor]"}),", and don't forget to disable other probe sections like ",(0,o.jsx)(n.strong,{children:"BLtouch"}),". You can connect the BD sensor to either the mainboard or the toolhead CAN module."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.code,{children:"[BDsensor]"}),", change ",(0,o.jsx)(n.code,{children:"speed"})," to 0.8. This only applies to the z tilt and PROBE_ACCURACY commands. The lower the value, the higher the accuracy during probing because the MCU reads the BD sensor in the main loop, not in real-time like a regular endstop. ",(0,o.jsx)(n.code,{children:"[BDsensor]"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["To use the BD sensor as a limit switch when homing Z-axis, change ",(0,o.jsx)(n.code,{children:"endstop_pin"})," in ",(0,o.jsx)(n.code,{children:"[stepper_z]"})," to ",(0,o.jsx)(n.code,{children:"endstop_pin: probe:z_virtual_endstop"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Make sure ",(0,o.jsx)(n.strong,{children:"printer.cfg"})," has ",(0,o.jsx)(n.code,{children:"[safe_z_home]"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Change the ",(0,o.jsx)(n.code,{children:"max_deviation"})," value in ",(0,o.jsx)(n.code,{children:"[bed_mesh]"})," and ",(0,o.jsx)(n.code,{children:"[z_tilt]"})," or ",(0,o.jsx)(n.code,{children:"[quad_gantry_level]"})," to 1 (recommended 0.7-1.0mm); Klipper's default is 5mm, otherwise, it might exceed the sensor's range"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.strong,{children:["Nozzle height should only be set in ",(0,o.jsx)(n.code,{children:"z_adjust:"}),", positive values bring it closer to the bed, negative values move it away. Other settings for nozzle height might cause bugs"]})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["To enable fast bed scanning, remove the ",(0,o.jsx)(n.code,{children:"#"})," before ",(0,o.jsx)(n.code,{children:"no_stop_probe:true"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Here is an example configuration:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cfg",children:"[BDsensor] \nscl_pin:PC6  # Servo signal port\nsda_pin:PC3  # Limit signal port\ndelay: 20 # 20us per pulse, this value should be >=20 but must be below 50\nz_offset:0 # this `z_offset` must be set to 0. \nz_adjust:0.0 # z axis adjustment, replace the z_offset function. within -0.3 to 0.3mm\nx_offset: -34\ny_offset: 0\n#no_stop_probe:true # enable this for fast probe, the toolhead will not stop at the probe point.\nposition_endstop: 0.8 # the Z axis will stop at this position (mm) while homing z, recommend value is 0.4~1.0\n#speed:0.8 # this speed only works for the z tilt and PROBE_ACCURACY command.\n\n[stepper_z]\nendstop_pin: probe:z_virtual_endstop \n#position_endstop: 0.5\nhoming_speed: 5\nsecond_homing_speed: 0.8\n\n[bed_mesh]\nspeed: 200\nhorizontal_move_z:1\nalgorithm: bicubic\n\n[quad_gantry_level]\nhorizontal_move_z:1\n\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"after-installation-check-by-sending-the-following-g-code-commands",children:"After installation, check by sending the following G-code commands:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"M102   S-1     # Read sensor information\nM102   S-2     # Read a distance value\n"})}),"\n",(0,o.jsx)(n.h2,{id:"check-connection",children:"Check Connection"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Send ",(0,o.jsx)(n.code,{children:"M102 S-1"})," through the ",(0,o.jsx)(n.strong,{children:"console"}),"; here is an example of the return message. If it returns blank or another string, check the connection and wire order:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"Send: M102 S-1\nRecv: V1.0 pandapi3d.com\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"calibration",children:"Calibration"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Clean the nozzle, then move the Z-axis through the console until the nozzle just touches the bed (BDsensor-m will use this position as the zero point, so no ",(0,o.jsx)(n.code,{children:"z_offset"})," is needed, which is why the value in the [BDsensor-m] section is 0)"]}),"\n",(0,o.jsxs)(n.li,{children:["Send the G-code command ",(0,o.jsx)(n.code,{children:"M102 S-6"})," through the ",(0,o.jsx)(n.strong,{children:"console"}),". The printer will move the Z-axis up by 0.1mm slowly each time until it reaches 4mm. Do not run M102 S-6 before installing the sensor, and do not turn off the printer during calibration, otherwise, the old calibration data will be lost. If this happens, simply recalibrate."]}),"\n",(0,o.jsxs)(n.li,{children:["After calibration, you can check if the BD sensor has been successfully calibrated with ",(0,o.jsx)(n.code,{children:"M102 S-5"}),", which will return the raw calibration data stored in the BD sensor."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Notes"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"The best homing speed for the Z-axis is 5"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"If M102 S-5 returns a first raw calibration data greater than 400, it means the sensor is installed too high and needs to be reinstalled closer to the bed; the recommended value for the first data point is 100. Also, ensure the second data point is at least 10 higher than the first."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"FAQ: What does it mean if the calibration data starts with 1, the second value is 9, and the third is 24?"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"This means the resolution between 0-0.1mm is only 9, while the resolution between 0.1-0.2mm is 15. Therefore, it's recommended to recalibrate to get a first resolution of 0-0.1mm greater than 10."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Don't forget to adjust the Z-axis height after running G28 or for the commands ",(0,o.jsx)(n.code,{children:"Z_tilt"})," and ",(0,o.jsx)(n.code,{children:"quad_gantry_level"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["The section names must be correctly capitalized, otherwise, Klipper will report ",(0,o.jsx)(n.code,{children:"Unknown pin chip name 'probe'"}),"."]}),"\n"]}),"\n"]})]})}function d(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},82273:function(e,n,s){s.d(n,{Z:function(){return t}});let t=s.p+"assets/images/jxcs_webp-e90fb83e26a5605607e720e487bc6f3a.webp"},79938:function(e,n,s){s.d(n,{Z:function(){return l},a:function(){return r}});var t=s(75271);let o={},i=t.createContext(o);function r(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);